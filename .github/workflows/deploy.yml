name: Deploy to Cloudflare Workers

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    environment: production  # 添加环境保护
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Verify Cloudflare API Token
        run: |
          echo "🔍 验证 Cloudflare API Token..."
          if [ -z "$CLOUDFLARE_API_TOKEN" ]; then
            echo "❌ CLOUDFLARE_API_TOKEN 环境变量未设置"
            exit 1
          fi
          echo "✅ CLOUDFLARE_API_TOKEN 已设置"
          
          # 验证用户信息
          echo "👤 验证用户信息..."
          pnpm exec wrangler whoami || {
            echo "❌ 无法获取用户信息"
            exit 1
          }
          
          # 验证账户权限
          echo "🏢 验证账户权限..."
          pnpm exec wrangler kv:namespace list --preview false 2>/dev/null || {
            echo "❌ API Token 缺少必要的 Workers 权限"
            echo "📖 请确保 API Token 具有以下权限："
            echo "   ✅ Account: Cloudflare Workers:Edit"
            echo "   ✅ Account: Account:Read"
            echo "   ✅ User: User:Read"
            echo "   ✅ Zone: Zone:Read (如果使用自定义域名)"
            echo ""
            echo "🔗 访问以下链接重新配置 Token："
            echo "   https://dash.cloudflare.com/profile/api-tokens"
            exit 1
          }
          
          echo "✅ API Token 权限验证通过"

      - name: Create KV namespace (if needed)
        run: |
          # 检查是否需要创建新的 KV 命名空间
          if [ "${{ secrets.CREATE_NEW_KV }}" = "true" ]; then
            echo "Creating new KV namespace..."
            pnpm exec wrangler kv:namespace create "github_hosts"
          fi

      - name: Deploy to Cloudflare Workers
        run: |
          echo "🚀 开始部署到 Cloudflare Workers..."
          
          # 尝试部署，如果失败则提供详细的错误信息
          if ! pnpm run deploy; then
            echo ""
            echo "❌ 部署失败！"
            echo "🔧 常见解决方案："
            echo "1. 检查 API Token 权限是否包含："
            echo "   - Account: Cloudflare Workers:Edit"
            echo "   - Account: Account:Read" 
            echo "   - User: User:Read"
            echo "2. 确认 wrangler.toml 中的配置正确"
            echo "3. 检查是否有足够的 Workers 订阅配额"
            echo ""
            echo "🔗 API Token 配置: https://dash.cloudflare.com/profile/api-tokens"
            exit 1
          fi
          
          echo "✅ 部署成功！"

      - name: Set secrets
        run: |
          echo "🔐 设置 Worker secrets..."
          
          # 设置 API Key
          if [ -n "${{ secrets.WORKER_API_KEY }}" ]; then
            echo "📝 设置 API_KEY..."
            echo "${{ secrets.WORKER_API_KEY }}" | pnpm exec wrangler secret put API_KEY
            echo "✅ API_KEY 设置完成"
          else
            echo "⚠️ WORKER_API_KEY secret 未设置，跳过"
          fi
          
          # 设置优选功能开关
          if [ -n "${{ secrets.ENABLE_OPTIMIZATION }}" ]; then
            echo "📝 设置 ENABLE_OPTIMIZATION 为: ${{ secrets.ENABLE_OPTIMIZATION }}"
            echo "${{ secrets.ENABLE_OPTIMIZATION }}" | pnpm exec wrangler secret put ENABLE_OPTIMIZATION
          else
            echo "📝 设置 ENABLE_OPTIMIZATION 为默认值: false"
            echo "false" | pnpm exec wrangler secret put ENABLE_OPTIMIZATION
          fi
          echo "✅ Secrets 设置完成"
